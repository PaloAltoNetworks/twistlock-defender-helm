apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
{{- if .Values.gke_autopilot_annotation }}
        {{ .Values.gke_autopilot_annotation }}
{{- end}}
{{- if .Values.annotations }}
  {{- range $key, $val := .Values.annotations }}
        {{ $key }}: {{ $val }}
  {{- end}}
{{- end}}
      labels:
        app: twistlock-defender
{{- if .Values.labels }}
  {{- range $key, $val := .Values.labels }}
        {{ $key }}: {{ $val }}
  {{- end}}
{{- end}}
    spec:
  {{- if .Values.tolerations }}
      tolerations:
      {{- range $i, $toleration := .Values.tolerations }}{{ $first := 1 }}
        {{- range $key, $val := $toleration }}
      {{if eq $first 1 }}- {{ $key }}: {{ $val -}} {{ $first = 0 }}{{ else }}  {{ $key }}: {{ $val -}}{{- end }}
        {{- end}}
      {{- end}}
  {{- end}}
      {{- if .Values.affinity }}
      affinity:
        {{ .Values.affinity | toYaml | indent 8 }}
      {{- end }}
      serviceAccountName: twistlock-service
{{- if .Values.image_pull_secret }}
      imagePullSecrets:
      - name: {{ .Values.image_pull_secret }}
{{- end}}
      restartPolicy: Always
{{- if .Values.node_selector }}
      nodeSelector:
        {{ .Values.node_selector }}
{{- end}}
{{- if .Values.priority_class_name }}
      priorityClassName: {{.Values.priority_class_name}}
{{- end}}
      containers:
      - name: twistlock-defender
        image: {{ .Values.image_name }}
        volumeMounts:
        - name: data-folder
          mountPath: "{{ .Values.twistlock_data_folder }}"
        - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
          mountPath: "/var/lib/twistlock/certificates"
{{- if .Values.container_runtime_socket_folder}}
        - name: docker-sock-folder
          mountPath: "{{ .Values.container_runtime_socket_folder }}"
{{- end}}
{{- if not .Values.talos }}
        - name: passwd
          mountPath: "/etc/passwd"
{{- end}}
          readOnly: true
        - name: syslog-socket
          mountPath: "/dev/log"
{{- if .Values.containers_storage_mount }}
        - name: {{ .Values.cri_data_volume_name }}
          mountPath: {{ .Values.containers_storage_mount }}
{{- end}}
{{- if .Values.containers_storage_mount_rke2 }}
        - name: {{ .Values.cri_data_rke2_volume_name }}
          mountPath: {{ .Values.containers_storage_mount_rke2 }}
{{- end}}
{{- if .Values.runc_proxy_sock_folder }}
        - name: runc-proxy-sock-folder
          mountPath: "/run"
{{- end}}
        env:
        - name: WS_ADDRESS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.env_secret }}
              key: ws_address
        - name: DEFENDER_TYPE
          value: {{ .Values.defender_type }}
        - name: LOG_PROD
          value: "true"
        - name: SYSTEMD_ENABLED
          value: "false"
        - name: DOCKER_CLIENT_ADDRESS
          value: "{{ .Values.docker_socket_path }}"
        - name: DEFENDER_CLUSTER_ID
{{- if (lookup "apps/v1" "DaemonSet" .Release.Namespace "twistlock-defender-ds") }}
          value: "{{ (index (index (lookup "apps/v1" "DaemonSet" .Release.Namespace "twistlock-defender-ds").spec.template.spec.containers 0).env 5).value }}"
{{- else }}
          value: "{{ uuidv4 }}"
{{- end }}
        - name: DEFENDER_CLUSTER_NAME_RESOLVING_METHOD
          value: "{{ .Values.cluster_name_resolving_method }}"
        - name: DEFENDER_CLUSTER
          value: "{{ .Values.cluster }}"
        - name: MONITOR_SERVICE_ACCOUNTS
          value: "{{ .Values.monitor_service_accounts }}"
        - name: MONITOR_ISTIO
          value: "{{ .Values.monitor_istio }}"
        - name: COLLECT_POD_LABELS
          value: "{{ .Values.collect_pod_labels }}"
        - name: INSTALL_BUNDLE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.env_secret }}
              key: install_bundle
        - name: HOST_CUSTOM_COMPLIANCE_ENABLED
          value: "{{ .Values.host_custom_compliance }}"
        - name: CLOUD_HOSTNAME_ENABLED
          value: "{{ .Values.unique_hostname }}"
{{- if .Values.FIPS_ENABLED }}
        - name: FIPS_ENABLED
          value: "{{ .Values.FIPS_ENABLED }}"
{{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          privileged: {{ .Values.privileged }}
{{- if .Values.selinux_header }}
          {{ .Values.selinux_header }}
            {{ .Values.selinux_options }}
{{- end }}
          capabilities:
            add:
            - NET_ADMIN  # Required for process monitoring
            - NET_RAW    # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
            - SYS_ADMIN  # Required for filesystem monitoring
            - SYS_PTRACE # Required for local audit monitoring
            - SYS_CHROOT # Required for changing mount namespace using setns
            - MKNOD      # A capability to create special files using mknod(2), used by docker-less registry scanning
            - SETFCAP    # A capability to set file capabilities, used by docker-less registry scanning
            - IPC_LOCK   # Required for perf events monitoring, allowing to ignore memory lock limits
        resources:
          {{ .Values.resources | toYaml | nindent 10 }} # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
          # limits:
          #   memory: "{{ trimAll "\"" .Values.limit_memory }}"
          #   cpu: "{{ trimAll "\"" .Values.limit_cpu }}"
          # requests:
          #   {{- if .Values.requests_memory }}
          #   memory: "{{ trimAll "\"" .Values.requests_memory }}"
          #   {{- end }}
          #   cpu: "{{ trimAll "\"" .Values.requests_cpu }}"
      volumes:
      - name: certificates
        secret:
          secretName: twistlock-secrets
          defaultMode: 256
      - name: syslog-socket
        hostPath:
          path: "/dev/log"
      - name: data-folder
        hostPath:
          path: "{{ .Values.DATA_FOLDER }}"
{{- if not .Values.talos }}
      - name: passwd
        hostPath:
          path: "/etc/passwd"
{{- end}}
{{- if .Values.container_runtime_socket_folder}}
      - name: docker-sock-folder
        hostPath:
          path: "{{ .Values.container_runtime_socket_folder }}"
{{- end}}
{{- if .Values.containers_storage_mount }}
      - name: {{ .Values.cri_data_volume_name }}
        hostPath:
          path: {{ .Values.containers_storage_mount }}
{{- end}}
{{- if .Values.containers_storage_mount_rke2 }}
      - name: {{ .Values.cri_data_rke2_volume_name }}
        hostPath:
          path: {{ .Values.containers_storage_mount_rke2 }}
{{- end}}
{{- if .Values.runc_proxy_sock_folder}}
      - name: runc-proxy-sock-folder
        hostPath:
          path: "/run"
{{- end}}
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet